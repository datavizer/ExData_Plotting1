find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
swirl()
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name <- c(my_char,"Lisa")
my_name
?paste
paste(my_name,space=" ")
paste(my_name,collapse = " ")
paste("Hello","world!",sep = " ")
paste(1:3,c("X","Y","z"),sep = "")
paste(1:3,c("X","Y","Z"),sep = "")
paste(LETTERS,1:4,sep = "-")
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na -> is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
c(11,2,na)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect)
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vextor
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20, nrow=4, ncol = 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
load("C:/Users/Lisa Ballard/Desktop/Coursera Data Science/hw_wk 1.csv")
?file
wkdir
dir
swirl()
5+7
?dir
?mkdir
?wkdir
?wk
wkdir
getwd
getwd()
read.csv("hw_wk 1.csv")
read.csv("hw_wk 1.csv")
?read.csv
my_data <- read.csv("hw_wk 1.csv")
my_data
my_data[40,]
my_data[152:153,]
my_data[47,]
is.na(my_data)
my_data[is.na(my_data,1)]
my_data[,1]
my_data[,"ozone"]
View(my_data)
my_data[,"Ozone"]
is.na(my_data[,"Ozone"])
sum(is.na(my_data[,"Ozone"]))
Ozone_values <- my_data[,1]
Ozone_values
mean(Ozone_values)
mean(!is.na(Ozone_values))
bad <- is.na(Ozone_values)
Ozone_values(!bad)
Ozone_values[!bad]
=mean(Ozone_values[!bad])
mean(Ozone_values[!bad])
spline()
swift()
swirl()
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10, by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)& x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,10)]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(mhy_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_data
quit
quit()
ls
getwd()
library(httr)
oath_endpoints("github")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "9e340e90940f7b7f251a",
secret = "ffc3fef35102f61f7ca36bbe7206e3e0f5608bc8")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
source('~/Data Scientist Coursera/Course 3 Getting and Cleaning Data/Code/get API.R')
source('~/Data Scientist Coursera/Course 3 Getting and Cleaning Data/Code/get API.R')
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "9e340e90940f7b7f251a",
secret = "e9e736c34fcbd2002fad6b64da7e22f48d7f2180")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp,
cache = FALSE)
install.packages("httpuv")
source('~/Data Scientist Coursera/Course 3 Getting and Cleaning Data/Code/get API.R')
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day,label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dtl
?dtl
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
swirl
library(swirl)
ls()
rm(list=ls())
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dyplr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
print(cran)
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(x:size))
select(cran,-(X:size))
filter(cran,package =="swirl")
filter(cran,r_version == "3.1.1",country == "US")
?Comparison
filter(cran,r_version <= "3.0.2",country == "IN")
filter(cran,country == "IN"|country =="IN")
filter(cran,country == "US"|country =="IN")
filter(cran,size>10500, r_os == "linux-gnu")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version) )
cran2 <- select(cran,size:ip_id)
arange(cran2,ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id)
)
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb / 2^10)
mutate(cran3,correct_size=size-1000)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- cran %>% group_by(package)
by_package <- group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs = 0.99)
top_unique <- filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
reset()
swirl()
View(cran)
View(cran)
submit()
?select
cran4 <- select(cran,ip_id,country,package,sum)
submit()
cran4 <- select(cran,ip_id,country,package,size)
View(cran4)
View(cran4)
submit()
source('C:/Users/LISABA~1/AppData/Local/Temp/Rtmpuu7AUr/chain1.R')
submit()
reset()
swirl()
submit()
?select
cran
source(chain1.R)
source('C:/Users/LISABA~1/AppData/Local/Temp/Rtmpuu7AUr/chain1.R')
submit()
?mutate
source('C:/Users/LISABA~1/AppData/Local/Temp/Rtmpuu7AUr/chain2.R')
source('C:/Users/LISABA~1/AppData/Local/Temp/Rtmpuu7AUr/chain2.R')
submit()
source('C:/Users/LISABA~1/AppData/Local/Temp/Rtmpuu7AUr/chain3.R')
submit()
source('C:/Users/LISABA~1/AppData/Local/Temp/Rtmpuu7AUr/chain4.R')
submit
submit()
source('C:/Users/LISABA~1/AppData/Local/Temp/Rtmpuu7AUr/chain4.R')
submit()
library(tidyr)
students
quit()
swirl()
library(swirl)
swirl()
dev.cur()
quit
0
exit
quit()
source('~/GitHub/ExData_Plotting1/Retrieve data.R')
source('~/GitHub/ExData_Plotting1/Retrieve data.R')
source('~/GitHub/ExData_Plotting1/plot2.R')
source('~/GitHub/ExData_Plotting1/plot2 graph only.R')
source('~/GitHub/ExData_Plotting1/plot2 graph only.R')
